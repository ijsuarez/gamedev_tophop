<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_circle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
enum aimdir {
    left = 180,
    right = 0,
    up = 90,
    down = 270
}

depth = 0;

instance_create(0, 0, obj_control);
instance_create(x + 45, y, obj_gun);

health = 4;
invincible = false;
grounded = true;

hsp = 0;
vsp = 0;

acc = 0.5;
grav = 0.1;

movespeed = 3;
jumpspeed = 5;
recoil = 5;

terminal_velocity = 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = !visible;
with (obj_gun) {
    visible = !visible;
}
alarm[1] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
key_right = keyboard_check(ord('D'));
key_left = -keyboard_check(ord('A'));
//key_up = -keyboard_check(ord('W'));
//key_down = keyboard_check(ord('S'));

key_jump = keyboard_check_pressed(ord('W'));
key_shoot = keyboard_check_pressed(vk_space);

//React to inputs
hdir = key_left + key_right;
//vdir = key_up + key_down;
if (hdir &gt; 0 and hsp &lt; movespeed) hsp += acc;
else if (hdir &lt; 0 and hsp &gt; -movespeed) hsp -= acc;
else {
    if (grounded) hsp = lerp(hsp, 0, 0.2);
    else hsp = lerp(hsp, 0, 0.02);
}

//Assign dir for obj_gun
if (hdir &lt; 0) {
    obj_gun.dir = aimdir.left;
    obj_gun.old_dir = obj_gun.dir;
} else if (hdir &gt; 0) {
    obj_gun.dir = aimdir.right;
    obj_gun.old_dir = obj_gun.dir;
}
//Up+Down overwrites Left+Right
if (!grounded) {
    obj_gun.dir = aimdir.down;
} else {
    obj_gun.dir = obj_gun.old_dir;
}
/*if (vdir &lt; 0) {
    obj_gun.dir = aimdir.up;
} else if (vdir &gt; 0) {
    obj_gun.dir = aimdir.down;
} else {
    obj_gun.dir = obj_gun.old_dir;
}*/

//Gravity effect
if (vsp &lt; terminal_velocity) vsp += global.TIME_PASSED * grav;

//Shoot
if (obj_gun.can_shoot and obj_gun.num_bullets &gt; 0 and key_shoot) {
    //Horizontal recoil
    if (obj_gun.dir = aimdir.left) {
        hsp += recoil;
    } else if (obj_gun.dir = aimdir.right) {
        hsp -= recoil;
    }
}

//Shoot down
if (obj_gun.can_shoot and obj_gun.num_bullets &gt; 0 and
    obj_gun.dir = aimdir.down and key_shoot) {
    if (vsp &gt; -terminal_velocity) {
        vsp += -recoil;
    } else {
        vsp = -terminal_velocity;
    }
}

if (grounded and key_jump) {
    audio_play_sound(snd_jump, 5, false);
    vsp -= jumpspeed;
}

if (!invincible) {
    visible = true;
    alarm[1] = -1;
}

//Horizontal Collision
if (!invincible and place_meeting(x,y+global.TIME_PASSED*hsp,obj_triangle)) {
    health--;
    audio_play_sound(snd_hurt, 1, false);
    invincible = true;
    alarm[0] = 100;
    alarm[1] = 5;
}
if (place_meeting(x+global.TIME_PASSED*hsp,y,obj_wall)) {
    while(!place_meeting(x+sign(hsp),y,obj_wall)) {
        x += sign(hsp);
    }
    hsp = 0;
}
x += global.TIME_PASSED * hsp;

//Vertical Collision
if (!invincible and place_meeting(x,y+global.TIME_PASSED*vsp,obj_triangle)) {
    health--;
    audio_play_sound(snd_hurt, 1, false);
    invincible = true;
    alarm[0] = 100;
    alarm[1] = 5;
}
if (place_meeting(x,y+global.TIME_PASSED*vsp,obj_wall)) {
    while(!place_meeting(x,y+sign(vsp),obj_wall)) {
        y += sign(vsp);
    }
    vsp = 0;
}
y += global.TIME_PASSED * vsp;

//Ground Collision
if (place_meeting(x,y+sprite_height/4,obj_ground)) {
    grounded = true;
} else {
    grounded = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw UI elements on character
draw_set_font(fnt_shareTechMono);
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(x, y, string(obj_gun.num_bullets));

if (health &gt; 1) {
    draw_sprite(spr_life, 0, x, y-45);
}
if (health &gt; 2) {
    draw_sprite(spr_life, 0, x-20, y-45);
}
if (health &gt; 3) {
    draw_sprite(spr_life, 0, x+20, y-45);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
