<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 0;

gun_offset = 50;

max_bullets = 10;
num_bullets = max_bullets;
bullet_xoffset = 10;
bullet_yoffset = 10;

shotrate = 4;
shotspeed = 20;
can_shoot = true;
reload = true;
reloadrate = 7;
cooldown = 15;

dir = aimdir.right;
old_dir = dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (num_bullets &lt; max_bullets) {
    num_bullets += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Point gun in proper direction
var bullet_x = 0;
var bullet_y = 0;
if (dir == aimdir.left) {
    image_angle = 0;
    image_xscale = -1;
    x = obj_circle.x - gun_offset;
    y = obj_circle.y;
    bullet_x = x - bullet_xoffset;
    bullet_y = y;
} else if (dir == aimdir.right) {
    image_angle = 0;
    image_xscale = 1;
    x = obj_circle.x + gun_offset;
    y = obj_circle.y;
    bullet_x = x + bullet_xoffset;
    bullet_y = y;
} else if (dir == aimdir.up) {
    image_angle = 90;
    image_yscale = 1;
    x = obj_circle.x;
    y = obj_circle.y - gun_offset;
    bullet_x = x;
    bullet_y = y - bullet_yoffset;
} else if (dir == aimdir.down) {
    image_angle = 90;
    image_yscale = -1;
    x = obj_circle.x;
    y = obj_circle.y + gun_offset;
    bullet_x = x;
    bullet_y = y + bullet_yoffset;
}

//Fire gun
if (can_shoot and obj_circle.key_shoot) {
    can_shoot = false;
    if (obj_circle.grounded) {
        alarm[0] = global.TIME_PASSED * cooldown;
    }
    if (num_bullets &gt; 0) {
        var inst = instance_create(bullet_x, bullet_y, obj_bullet);
        audio_play_sound(snd_pew, 4, false);
        num_bullets -= 1;
        with (inst) {
            inst.direction = obj_gun.dir;
            inst.speed = global.TIME_PASSED * obj_gun.shotspeed;
        }
    } else {
        audio_play_sound(snd_click, 2, false);
    }
}

//Reload if on ground
if (alarm[0] &lt;= 0 and obj_circle.grounded) {
    alarm[0] = global.TIME_PASSED * reloadrate;
} else if (!obj_circle.grounded) {
    alarm[0] = -1;
}

if (alarm[1] &lt;= 0 and !can_shoot) {
    alarm[1] = global.TIME_PASSED * shotrate;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
